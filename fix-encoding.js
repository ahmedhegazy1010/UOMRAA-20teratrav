const fs = require("fs");
const path = require("path");

// Function to fix encoding issues
function fixEncoding(content) {
  // Replace common encoding issues
  const fixes = {
    "ÙƒÙ„Ù…Ø© Ø§Ù„Ù…Ø±ï¿½ï¿½Ø±": "ÙƒÙ„Ù…Ø© Ø§Ù„Ù…Ø±ÙˆØ±",
    "Ø®Ø· Ø§ï¿½ï¿½Ø³ÙŠØ±": "Ø®Ø· Ø§Ù„Ø³ÙŠØ±",
    "Ø§ï¿½ï¿½Ù… Ø§Ù„Ø´Ø±ÙƒØ©": "Ø§Ø³Ù… Ø§Ù„Ø´Ø±ÙƒØ©",
    "Ø¥Ø¹Ø¯ï¿½ï¿½Ø¯Ø§Øª Ø§Ù„Ù†Ø¸Ø§Ù… Ø§Ù„Ø¹Ø§Ù…Ø©": "Ø¥Ø¹Ø¯Ø§Ø¯Ø§Øª Ø§Ù„Ù†Ø¸Ø§Ù… Ø§Ù„Ø¹Ø§Ù…Ø©",
    "Ø¥Ø¹Ø¯Ø§Ø¯ï¿½ï¿½Øª Ø¹Ø§Ù…Ø© Ù„Ù„Ù…ÙˆÙ‚Ø¹ ÙˆØ§Ù„Ù†Ø¸Ø§Ù…": "Ø¥Ø¹Ø¯Ø§Ø¯Ø§Øª Ø¹Ø§Ù…Ø© Ù„Ù„Ù…ÙˆÙ‚Ø¹ ÙˆØ§Ù„Ù†Ø¸Ø§Ù…",
    "Ù…Ø¯ÙŠØ± Ø§Ù„ï¿½ï¿½Ø¸Ø§Ù…": "Ù…Ø¯ÙŠØ± Ø§Ù„Ù†Ø¸Ø§Ù…",
    "Ø±Ø³ï¿½ï¿½Ù… Ø§Ù„ØªØ£Ø´ÙŠØ±Ø©": "Ø±Ø³ÙˆÙ… Ø§Ù„ØªØ£Ø´ÙŠØ±Ø©",
    "Ø§Ù„ØªÙ†Ù‚Ù„Ø§Øª ï¿½ï¿½Ù„Ø¯Ø§Ø®Ù„ÙŠØ© Ø¨Ø£Ø­Ø¯Ø« ï¿½ï¿½Ù„Ø¨Ø§ØµØ§Øª": "Ø§Ù„ØªÙ†Ù‚Ù„Ø§Øª Ø§Ù„Ø¯Ø§Ø®Ù„ÙŠØ© Ø¨Ø£Ø­Ø¯Ø« Ø§Ù„Ø¨Ø§ØµØ§Øª",
    "Ø±Ø­Ù„Ø§Øª Ø§ï¿½ï¿½Ø¹Ù…Ø±Ø©": "Ø±Ø­Ù„Ø§Øª Ø§Ù„Ø¹Ù…Ø±Ø©",
    "Ø®ï¿½ï¿½ Ø§Ù„Ø³ÙŠØ±": "Ø®Ø· Ø§Ù„Ø³ÙŠØ±",
    "ØªØ­Ø³ÙŠÙ† Ø®Ø¯Ù…Ø§ØªÙ†Ø§ ÙˆØªØ·ÙˆÙŠØ± Ù…Ù†Øªï¿½ï¿½Ø§Øª Ø¬Ø¯ÙŠØ¯Ø©": "ØªØ­Ø³ÙŠÙ† Ø®Ø¯Ù…Ø§ØªÙ†Ø§ ÙˆØªØ·ÙˆÙŠØ± Ù…Ù†ØªØ¬Ø§Øª Ø¬Ø¯ÙŠØ¯Ø©",
    "Ù†Ø¸ï¿½ï¿½Ø© Ø¹Ø§Ù…Ø© Ø¹Ù„Ù‰ Ø£Ø¯Ø§Ø¡ Ø§Ù„Ù…ÙˆÙ‚Ø¹ ÙˆØ§Ù„Ø­Ø¬ÙˆØ²Ø§Øª":
      "Ù†Ø¸Ø±Ø© Ø¹Ø§Ù…Ø© Ø¹Ù„Ù‰ Ø£Ø¯Ø§Ø¡ Ø§Ù„Ù…ÙˆÙ‚Ø¹ ÙˆØ§Ù„Ø­Ø¬ÙˆØ²Ø§Øª",
    "Ø·Ù„Ø¨Ø§Øª ï¿½ï¿½Ø§ØµØ©:": "Ø·Ù„Ø¨Ø§Øª Ø®Ø§ØµØ©:",
    "Ø§Ù„ØµÙŠØ§Ù†Ø© ï¿½ï¿½Ø§Ù„Ø£Ù…Ø§Ù†": "Ø§Ù„ØµÙŠØ§Ù†Ø© ÙˆØ§Ù„Ø£Ù…Ø§Ù†",
    "ï¿½ï¿½Ù„Ø³Ù…Ø§Ø­ Ø¨Ø§Ù„ØªØ³Ø¬ÙŠÙ„": "Ø§Ù„Ø³Ù…Ø§Ø­ Ø¨Ø§Ù„ØªØ³Ø¬ÙŠÙ„",
    "Ø§Ù„Ù†Ø³Ø® Ø§Ù„Ø§Ø­ØªÙŠØ§Ø·ÙŠ Ø§Ù„Øªï¿½ï¿½Ù‚Ø§Ø¦ÙŠ": "Ø§Ù„Ù†Ø³Ø® Ø§Ù„Ø§Ø­ØªÙŠØ§Ø·ÙŠ Ø§Ù„ØªÙ„Ù‚Ø§Ø¦ÙŠ",
    "Ø¥Ø¹Ø§Ø¯Ø© ØªØ¹ÙŠÙŠï¿½ï¿½ ÙƒÙ„Ù…Ø© Ø§Ù„Ù…Ø±ÙˆØ±": "Ø¥Ø¹Ø§Ø¯Ø© ØªØ¹ÙŠÙŠÙ† ÙƒÙ„Ù…Ø© Ø§Ù„Ù…Ø±ÙˆØ±",
  };

  let fixedContent = content;

  // Apply all fixes
  for (const [broken, fixed] of Object.entries(fixes)) {
    fixedContent = fixedContent.replace(
      new RegExp(broken.replace(/[.*+?^${}()|[\]\\]/g, "\\$&"), "g"),
      fixed,
    );
  }

  return fixedContent;
}

// Fix AdminDashboard.tsx
const adminDashboardPath = "./client/pages/AdminDashboard.tsx";
if (fs.existsSync(adminDashboardPath)) {
  const content = fs.readFileSync(adminDashboardPath, "utf8");
  const fixedContent = fixEncoding(content);
  fs.writeFileSync(adminDashboardPath, fixedContent, "utf8");
  console.log("âœ… Fixed AdminDashboard.tsx");
}

// Fix Umrah.tsx
const umrahPath = "./client/pages/Umrah.tsx";
if (fs.existsSync(umrahPath)) {
  const content = fs.readFileSync(umrahPath, "utf8");
  const fixedContent = fixEncoding(content);
  fs.writeFileSync(umrahPath, fixedContent, "utf8");
  console.log("âœ… Fixed Umrah.tsx");
}

// Fix Privacy.tsx
const privacyPath = "./client/pages/Privacy.tsx";
if (fs.existsSync(privacyPath)) {
  const content = fs.readFileSync(privacyPath, "utf8");
  const fixedContent = fixEncoding(content);
  fs.writeFileSync(privacyPath, fixedContent, "utf8");
  console.log("âœ… Fixed Privacy.tsx");
}

// Fix Admin.tsx
const adminPath = "./client/pages/Admin.tsx";
if (fs.existsSync(adminPath)) {
  const content = fs.readFileSync(adminPath, "utf8");
  const fixedContent = fixEncoding(content);
  fs.writeFileSync(adminPath, fixedContent, "utf8");
  console.log("âœ… Fixed Admin.tsx");
}

// Fix AdminSetup.tsx
const adminSetupPath = "./client/pages/AdminSetup.tsx";
if (fs.existsSync(adminSetupPath)) {
  const content = fs.readFileSync(adminSetupPath, "utf8");
  const fixedContent = fixEncoding(content);
  fs.writeFileSync(adminSetupPath, fixedContent, "utf8");
  console.log("âœ… Fixed AdminSetup.tsx");
}

console.log("ðŸŽ‰ ØªÙ… Ø¥ØµÙ„Ø§Ø­ Ø¬Ù…ÙŠØ¹ Ù…Ø´Ø§ÙƒÙ„ Ø§Ù„ØªØ±Ù…ÙŠØ²!");
